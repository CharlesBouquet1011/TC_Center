# rm -rf live
# mkdir live
# cd live
# ../config.sfr
# lb build

# Pour l'installation : apt install live-build zstd
#dd if=./live-image-amd64.hybrid.iso of=/dev/sdd bs=8MB
### FLASH sur MACos
#sudo dcfldd if=./live-image-amd64.hybrid.iso of=/dev/disk4 of=/dev/disk5 of=/dev/disk6
#
# Persistence 
# lb config --apt-recommends false --bootappend-live "boot=live locales=fr_FR.UTF-8 keyboard-layouts=fr username=user persistence" --mode debian --system live --parent-distribution bookworm --archive-areas "main contrib non-free non-free-firmware" --binary-images iso-hybrid --distribution TC-CYNU
# Version minimaliste
lb config --apt-recommends false --bootappend-live "boot=live locales=fr_FR.UTF-8 keyboard-layouts=fr username=user timezone=Europe/Paris" --mode debian --system live --parent-distribution bookworm --archive-areas "main contrib non-free non-free-firmware" --binary-images iso-hybrid --distribution TC_Center0

cp ../0018-enable_ask_services.chroot config/hooks/live/
cp ../0020-enable-ssh.chroot config/hooks/live
cp ../enable-mount-disk.chroot config/hooks/live

echo task-cinnamon-desktop > config/package-lists/desktop.list.chroot
echo curl >> config/package-lists/desktop.list.chroot
echo vim >> config/package-lists/desktop.list.chroot
echo ntp >> config/package-lists/desktop.list.chroot #pour synchroniser l'heure
echo tcpdump >> config/package-lists/desktop.list.chroot
echo libpci3 >> config/package-lists/desktop.list.chroot
echo firefox-esr >> config/package-lists/desktop.list.chroot
echo ssh >> config/package-lists/desktop.list.chroot
echo zstd >> config/package-lists/desktop.list.chroot
echo user-setup >> config/package-lists/desktop.list.chroot
echo wpasupplicant >> config/package-lists/desktop.list.chroot # Wifi management
echo kbd >> config/package-lists/desktop.list.chroot
echo console-data >> config/package-lists/desktop.list.chroot
echo console-setup >> config/package-lists/desktop.list.chroot
echo cifs-utils >> config/package-lists/desktop.list.chroot
echo openconnect >> config/package-lists/desktop.list.chroot
echo initramfs-tools >> config/package-lists/desktop.list.chroot #pour longhorn

#serveur ssh
echo openssh-server >> config/package-lists/desktop.list.chroot
#longhorn
echo open-iscsi >> config/package-lists/desktop.list.chroot

#shell
# echo bash >> config/package-lists/desktop.list.chroot
# echo login >> config/package-lists/desktop.list.chroot
# echo systemd-sysv >> config/package-lists/desktop.list.chroot

# Configuration Ã  supprimer pour la production
echo sudo >> config/package-lists/desktop.list.chroot
echo gnome-terminal >> config/package-lists/desktop.list.chroot

# podman
echo uidmap >> config/package-lists/desktop.list.chroot
echo slirp4netns >> config/package-lists/desktop.list.chroot
echo podman >> config/package-lists/desktop.list.chroot

# eduroam / startnet / startvpn 
mkdir -p config/includes.chroot_after_packages/etc/skel
cp ../ca.pem  config/includes.chroot_after_packages/etc/skel/

cp ../startmount.sh config/includes.chroot_after_packages/etc/skel/
# cp ../startvpn.sh config/includes.chroot_after_packages/etc/skel/
# cp ../getlogin.sh config/includes.chroot_after_packages/etc/skel/


mkdir -p config/includes.chroot_after_packages/etc/systemd/system/
# ask service
cp ../ask.service config/includes.chroot_after_packages/etc/systemd/system/
#ssh service:
cp ../ssh_keys.service config/includes.chroot_after_packages/etc/systemd/system/
# mount service
cp ../mountdisk.service config/includes.chroot_after_packages/etc/systemd/system/

mkdir -p config/includes.chroot_after_packages/usr/local/bin
cp ../startmount.sh config/includes.chroot_after_packages/usr/local/bin/

# k3s
echo git >> config/package-lists/desktop.list.chroot
echo fuse3 >> config/package-lists/desktop.list.chroot
cp ../k3s.sh config/includes.chroot_after_packages/usr/local/bin/
cp ../hosts config/includes.chroot_after_packages/etc
cp ../configSsh.sh config/includes.chroot_after_packages/usr/local/bin/
cp ../authorized_keys config/includes.chroot_after_packages/usr/local/bin/

#repo distant k3s
mkdir -p config/includes.chroot_after_packages/etc/rancher/k3s/
cp ../registries.yaml config/includes.chroot_after_packages/etc/rancher/k3s/registries.yaml

cp ../hostname-k3s.sh config/includes.chroot_after_packages/usr/local/bin/
cp ../authorized_keys config/includes.chroot_after_packages/etc/skel/
cp ../k3s.sh config/includes.chroot_after_packages/etc/skel/
cp ../grafana.sh config/includes.chroot_after_packages/etc/skel/

cp ../hostname-k3s.sh config/includes.chroot_after_packages/etc/skel/
cp ../configAfterBoot.sh config/includes.chroot_after_packages/etc/skel/
cp ../configSsh.sh config/includes.chroot_after_packages/etc/skel/


# docker
cp ../docker.chroot config/hooks/live/

